{
  "Class": {
    "prefix": ["class"],
    "body": [
      "class $1:",
      "    \"\"\" ${2:description} \"\"\"",
      "",
      "    def __init__(self, ${3:args}):",
      "        $0"
    ],
    "description": "create class"
  },
  "From": {
    "prefix": ["from"],
    "body": [
      "from $1 import $2"
    ]
  },
  "Script": {
    "prefix": ["main"],
    "body": [
      "if __name__ == '__main__':",
      "\tif len(sys.argv) > 1:",
      "\t\tsys.argv[1]"
    ]
  },
  "CreateFolder": {
    "prefix": ["mkdir"],
    "body": [
      "import os",
      "",
      "if not os.path.exists($1):",
      "\tos.mkdir($1)"
    ]
  },
  "Now": {
    "prefix": ["now"],
    "body": [
      "from detetatime import datetime, timedelta",
      "",
      "datetime.now(datetime.timedelta(hours=9))"
    ]
  },
  "NowFormat": {
    "prefix": [ "nowformat"],
    "body": [
      "from detetatime import datetime, timedelta",
      "",
      "JST = datetime.timedelta(hours=9)",
      "datetime.now(JST).strftime('%Y-%m-%d %H:%M:%S')"
    ]
  },
  "ForRange": {
    "prefix": ["for"],
    "body": [
      "for $1 in range($2):",
      "\t$0"
    ]
  },
  "ForDict": {
    "prefix": ["ford"],
    "body": [
      "for key, value in $1.items():",
      "\t$0"
    ]
  },
  "TernaryOperator": {
    "prefix": ["if", "ifelse"],
    "body": [
      "${1:true_val} if ${2:condition} else ${3:false_val}"
    ]
  },
  "FileOpen": {
    "prefix": ["open", "read", "file"],
    "body": [
      "with open(${1:path}, encoding='utf-8') as f:",
      "\tfor row in f.readlines():",
      "\t\t$0"
    ]
  },
  "TryCache": {
    "prefix": ["try"],
    "body": [
      "try:",
      "    $1",
      "except Exception as e:",
      "    $2",
      "finally:",
      "    $3"
    ]
  }
}
