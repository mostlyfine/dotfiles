snippet     #!
	  #!/usr/bin/env perl
    # -*- coding: utf-8 -*-
    use strict;
    use warnings;
    use utf8;

snippet dump
    use Data::Dump; warn Dumper(${1:code});

snippet dd
    use Data::Dumper;
    local $Data::Dumper::Indent = 1;
    local $Data::Dumper::Terse  = 1;
    warn Dumper(${1:code});

snippet c
    use Carp qw/croak/;

snippet new
    sub new {
        my $class = shift;
        my $args = ref $_[0] ? $_[0] : +{@_};

        ${1:code}

        bless $args, $class;
    }

snippet sub
  sub ${1:name} {
    my ($${2:args}) = @_;
    ${3:body}
  }

snippet test
    #!/usr/bin/env perl -w
    use strict;
    use Test::More;

    subtest => sub {
      done_testing;
    };

    done_testing;

snippet self
    my ($self) = @_;

snippet export
    use parent qw(Exporter);
    our @EXPORT_OK = qw(${1});

snippet file
    use Path::Class qw(file);
    my @lines = file(__FILE__)->dir->file('${1:code}')->slurp;

snippet slurp
    my $${1:var} = do { local $/; open my $file, '<', "${2:file}"; <$file> };
    ${3}

snippet fore
    foreach my $${1:x} (@${2:array}) {
      ${3:# body...}
    }

snippet map
    map { ${2:body} } ${1:@array};

snippet lm
  use Log::Minimal;;
  local $Log::Minimal::COLOR = 1;
  local $Log::Minimal::AUTODUMP = 1;
