snippet #!
  #!/usr/bin/env perl

  use strict;
  use warnings;
  use utf8;

  ${1:code}

snippet dump
    use Data::Dumper;
    local $Data::Dumper::Deparse = 1;
    local $Data::Dumper::Purity = 1;
    local $Data::Dumper::Indent = 1;
    local $Data::Dumper::Terse  = 1;
    warn Dumper(${1:code});

snippet dd
    use Data::Dumper; warn Dumper(${1:code});

snippet new
    sub new {
        my $class = shift;
        my $args = ref $_[0] ? $_[0] : +{@_};

        ${1:code}

        bless $args, $class;
    }

snippet sub
  sub ${1:name} {
    my ($${2:args}) = @_;
    ${3:body}
  }

snippet test
  use Test::Most;

  subtest "${1:testcase}" => sub {
    ${2:code}
  };

  done_testing;

snippet export
    use parent qw(Exporter);
    our @EXPORT_OK = qw(${1});

snippet fileread
  open my $fh, '<', ${1:filename} or die $!;
  my $lines = <$fh>;
  close $fh;

snippet file
  open my $fh, '<', ${1:filename} or die $!;
  while(my $line = <$fh>) {
    chomp($line);
    ${2:code}
    print $line."\n";
  }
  close $fh;

snippet fore
  foreach my $${1:x} (@${2:array}) {
    ${3:# body...}
  }

snippet map
  map { ${2:body} } ${1:@array};

snippet lm
  use Log::Minimal;;
  local $Log::Minimal::COLOR = 1;
  local $Log::Minimal::AUTODUMP = 1;

snippet querylog
  require DBIx::QueryLog; my $guard = DBIx::QueryLog->guard();

snippet std
  while (my $input = <>) {
    chomp($input);
    ${1}
    print $input."\n";
  }
