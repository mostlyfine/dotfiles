set nocompatible

syntax on
filetype indent plugin on
set t_Co=256
colorscheme elflord

set background=dark
set laststatus=2
set cmdheight=2
set statusline=[%L]\ %t%r%m%=\ [%{&ff}]\ %{'['.(&fenc!=''?&fenc:&enc).']'}\ %c:%l
set autoread
set hidden
set backspace=indent,eol,start
set confirm
set t_vb=
set novisualbell
set noerrorbells
set gdefault
set history=1000
set scrolloff=5

set showcmd
set showmatch
runtime macros/matchit.vim
set matchtime=1
set number
set nolist
set notitle
set noruler
set formatoptions+=mM
set formatoptions-=ro
set shellslash
set wrap
set display=lastline
set nofoldenable

set autoindent
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set smarttab
set tags+=tags;.tags;~/tags;~/.tags

set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,iso-2022-jp,cp932,sjis,euc-jp
set fileformats=unix,mac,dos
set ambiwidth=double
set imdisable
scriptencoding utf-8

set wrapscan
set ignorecase
set smartcase
set incsearch
set hlsearch
set grepprg=git\ grep\ -n\ $*
set keywordprg=:help
set noswapfile
if isdirectory(expand('~/.vim-backup'))
  set backup
  set backupdir=~/.vim-backup
else
  set nobackup
endif

let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_sizestyle = 'H'
let g:netrw_timefmt = "%Y/%m/%d %H:%M:%S"
let g:netrw_preview = 1
let g:netrw_list_hide = '\(^\|\s\s\)\zs\.\S\+'
let g:netrw_altv = 1
let g:netrw_alto = 1

set wildmenu
set wildmode=full
set complete=.,w,b,u,t,k
set completeopt=menuone
if has('path-7.4.775')
  set completeopt+=noinsert,noselect  " 自動選択不可、自動挿入不可
endif

set pumheight=10
if v:version >= 700
  inoremap <expr><CR>  pumvisible() ? "\<C-y>" : "\<CR>"
  inoremap <expr><C-n> pumvisible() ? "\<Down>" : "\<C-n>"
  inoremap <expr><C-p> pumvisible() ? "\<Up>" : "\<C-p>"
  highlight Pmenu ctermbg=8
  highlight PmenuSel ctermbg=6
  highlight PmenuSbar ctermbg=2
  highlight PmenuThumb ctermfg=3
endif

" ESC =  Ctrl-J
inoremap <silent> jj <Esc>
inoremap <C-j> <Esc>
noremap <C-j> <esc>
noremap! <C-j> <esc>

nnoremap Y y$

nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap j gj

nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz

nnoremap + 3<C-w>+
nnoremap - 3<C-w>-
nnoremap { 3<C-w><
nnoremap } 3<C-w>>

nnoremap <Esc><Esc> :<C-u>set nohlsearch<Return>
nnoremap <Space> <Esc>:bnext<CR>
nnoremap <S-Space> <Esc>:bprevious<CR>
nnoremap <Left> <Esc>:bprevious<CR>
nnoremap <Right> <Esc>:bnext<CR>

vnoremap <silent> * "vy/\V<C-r>=substitute(escape(@v, '\/'), "\n", '\\n', 'g')<CR><CR>

" disable history disp
nnoremap q: <NOP>
nnoremap q/ <NOP>
nnoremap q? <NOP>

" MRU/Buffer list
nnoremap <silent> fm <Esc>:bro ol<CR>
nnoremap <silent> fu <Esc>:Tlist<CR>
nnoremap <silent> ;; <Esc>:ls<CR>:b<Space>

" sudo write
cmap w!! w !sudo tee > /dev/null %

" change encoding
command! Cp932 edit ++enc=cp932
command! Utf8 edit ++enc=utf-8
command! Euc edit ++enc=euc-jp

" function list
command! Tlist lvimgrep /^\s*\(sub\|def\|function\|func\|interface\|class\|module\) /gj %

"quickfix
nnoremap <silent> <Leader>c :cclose<cr>:lclose<cr>

if v:version >= 700
  augroup extracmd
    autocmd!
    autocmd InsertEnter * highlight StatusLine ctermbg=red guibg=red
    autocmd InsertLeave * highlight StatusLine ctermbg=darkgray guibg=darkgray
    autocmd QuickfixCmdPost make,grep,grepadd,vimgrep,vimgrepadd cwin
    autocmd QuickFixCmdPost lmake,lgrep,lgrepadd,lvimgrep,lvimgrepadd lwin
    highlight IgnoreSpace ctermbg=red guibg=red
    autocmd Colorscheme * highlight IgnoreSpace ctermbg=red guibg=red
    autocmd VimEnter,WinEnter * match IgnoreSpace /\s\+$\|　/
  augroup END
endif

autocmd FileType * setlocal formatoptions-=cro omnifunc=syntaxcomplete#Complete errorformat=%m\ in\ %f\ on\ line\ %l
autocmd FileType help,qf nnoremap <buffer> q <C-w>c

" git
augroup gitcmd
  autocmd!
  autocmd FileType gitcommit DiffGitCached | wincmd J
augroup END

" perl
augroup perlcmd
  autocmd!
  autocmd BufNewFile,BufNew,BufRead *.pl,*.pm,*.t,*.cgi,*.psgi setlocal filetype=perl
  autocmd BufNewFile,BufRead,BufEnter *.pl nnoremap <Leader>r :!carton exec perl %<Enter>
  autocmd FileType perl setlocal path+=./;./lib;./local
  let perl_no_scope_in_variables=1
  let perl_include_pod=1
  let perl_extended_vars=1
  let perl_perl_sync_dist=250
augroup END

" ruby
augroup rubycmd
  autocmd!
  autocmd FileType yaml setlocal shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead *.rb,*.feature,*.rhtml,*.haml setlocal filetype=ruby shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead,BufEnter *.rb nnoremap <Leader>r :!bundle exec ruby %<Enter>
  autocmd FileType ruby setlocal path+=./;./vendor/bundle;~/vendor/bundle isk+=@-@
  let ruby_space_errors=1
augroup END

" javascript
augroup javascriptcmd
  autocmd!
  autocmd BufNewFile,BufRead *.js,*.json setlocal filetype=javascript fileencoding=utf-8
  autocmd BufNewFile,BufRead,BufEnter *.js nnoremap <Leader>r :!node %<Enter>
  autocmd FileType javascript setlocal tabstop=2 shiftwidth=2 omnifunc=javascriptcomplete#CompleteJS
augroup END

" python
augroup pythoncmd
  autocmd!
  autocmd BufNewFile,BufRead *.py setlocal filetype=python fileencoding=utf-8
  autocmd BufNewFile,BufRead,BufEnter *.py nnoremap <Leader>r :!python %<Enter>
  autocmd FileType python setlocal tabstop=4 shiftwidth=4 omnifunc=pythoncomplete#Complete
augroup END

" go
augroup gocmd
  autocmd!
  autocmd BufNewFile,BufRead *.go setlocal filetype=go fileencoding=utf-8
  autocmd FileType go setlocal tabstop=4 shiftwidth=4 noexpandtab autowrite
  autocmd FileType go setlocal makeprg=go\ build errorformat=%
augroup END

" php
augroup phpcmd
  autocmd!
  autocmd BufNewFile,BufRead *.php,*.inc setlocal filetype=php fileencoding=utf-8
  autocmd FileType php setlocal tabstop=2 shiftwidth=2 omnifunc=phpcomplete#CompletePHP

  let g:php_baselib       = 1
  let g:php_htmlInStrings = 1
  let g:php_noShortTags   = 1
  let g:php_sql_query     = 1
  let g:sql_type_default  = 'mysql'
augroup END

" html
augroup htmlcmd
  autocmd!
  autocmd Filetype xml inoremap <buffer> </ </<C-x><C-o>
  autocmd Filetype html inoremap <buffer> </ </<C-x><C-o>
  autocmd Filetype html inoremap <> <><Left>
  autocmd Filetype html setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS iskeyword+=-
augroup END
